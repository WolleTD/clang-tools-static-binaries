name: clang-tools_windows-amd64

on:
  push:
    branches: [ matrix ]

jobs:
  build-and-deploy:
    runs-on: windows-latest
    strategy:
      matrix:
        clang-version: [ 3.9, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
        include:
          - clang-version: 3.9
            release: llvm-project-3.9.1
            #extra-args: '-DLLVM_EXTERNAL_CLANG_SOURCE_DIR=../clang -DLLVM_EXTERNAL_CLANG_TOOLS_EXTRA_SOURCE_DIR=../clang-tools-extra'
          - clang-version: 4
            release: llvm-project-4.0.1
          - clang-version: 5
            release: llvm-project-5.0.2
          - clang-version: 6
            release: llvm-project-6.0.1
          - clang-version: 7
            release: llvm-project-7.1.0
          - clang-version: 8
            release: llvm-project-8.0.1
          - clang-version: 9
            release: llvm-project-9.0.1
            tar-extra-args: '--exclude=llvm-project-9.0.1/libclc/amdgcn-mesa3d'
          - clang-version: 10
            release: llvm-project-10.0.1
          - clang-version: 11
            release: llvm-project-11.1.0.src
          - clang-version: 12
            release: llvm-project-12.0.0rc4.src
    env:
      COMMON_CMAKE_ARGS: '-Thost=x64 -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS="/MP /std:c++14" -DLLVM_USE_CRT_MINSIZEREL="MT"'
      RELEASE: '${{ matrix.release }}'
    steps:
    - uses: actions/checkout@v2
    - name: install wget
      run: choco install wget
    - name: get llvm-project
      if: ${{ matrix.clang-version < 7 }}
      run: |
        $version = $env:RELEASE -replace 'llvm-project-'
        wget https://releases.llvm.org/${version}/llvm-${version}.src.tar.xz
        wget https://releases.llvm.org/${version}/cfe-${version}.src.tar.xz
        wget https://releases.llvm.org/${version}/clang-tools-extra-${version}.src.tar.xz
    - name: get llvm-project
      if: ${{ matrix.clang-version == 7 || matrix.clang-version == 8 }}
      run: |
        $version = $env:RELEASE -replace 'llvm-project-'
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/llvm-${version}.src.tar.xz
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/cfe-${version}.src.tar.xz
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/clang-tools-extra-${version}.src.tar.xz
    - name: unpack llvm-project
      if: ${{ matrix.clang-version < 9 }}
      run: |
        $version = $env:RELEASE -replace 'llvm-project-'
        $env:Path = "C:\Program Files\Git\usr\bin;$env:Path"
        tar xf llvm-${version}.src.tar.xz
        tar xf cfe-${version}.src.tar.xz --exclude=cfe-${version}.src/test/Driver/Inputs/*
        tar xf clang-tools-extra-${version}.src.tar.xz
        mkdir ${{ matrix.release }}
        mv llvm-${version}.src ${{ matrix.release }}/llvm
        mv cfe-${version}.src ${{ matrix.release }}/clang
        mv clang-tools-extra-${version}.src ${{ matrix.release }}/clang-tools-extra
    - name: get and unpack llvm-project
      if: ${{ matrix.clang-version >= 9 }}
      run: |
        $version = $env:RELEASE -replace '^llvm-project-' -replace '.src$' -replace 'rc', '-rc'
        $env:Path = "C:\Program Files\Git\usr\bin;$env:Path"
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/${{ matrix.release }}.tar.xz
        tar xf ${{ matrix.release }}.tar.xz --exclude=${{ matrix.release }}/clang/test/Driver/Inputs/* --exclude=${{ matrix.release }}/libcxx/test/std/input.output/filesystems/Inputs/static_test_env/* ${{ matrix.tar-extra-args }}
    - name: patch clang-3.9 constify operator
      if: ${{ matrix.clang-version == 3.9 }}
      run: patch ${{ matrix.release }}/llvm/utils/TableGen/AsmWriterEmitter.cpp windows-clang-3.9_constify-operator.patch
    - name: patch clang-8 includes
      if: ${{ matrix.clang-version == 8 }}
      run: patch ${{ matrix.release }}/llvm/include/llvm/Demangle/MicrosoftDemangleNodes.h include-cstdint-string-prior-to-using-uint8_t.patch
    - name: patch trivially-copyable clang 9/10
      if: ${{ matrix.clang-version == 9 || matrix.clang-version == 10 }}
      run: patch ${{ matrix.release }}/llvm/cmake/config-ix.cmake windows-clang-9-10-trivially-copyable-mismatch.patch
    - name: make build directory
      run: mkdir -p ${{ matrix.release }}/build
    - name: cmake
      run: cd ${{ matrix.release }}/build && cmake ../llvm -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" ${{ env.COMMON_CMAKE_ARGS }} ${{ matrix.extra-args }}
    #- name: build
    #  run: cd ${{ matrix.release }}/build && cmake --build . --config MinSizeRel --target clang-format clang-query clang-tidy
    #- name: rename output binary
    #  run: |
    #    mv ${{ matrix.release }}\build\MinSizeRel\bin\clang-format.exe ${{ matrix.release }}\build\MinSizeRel\bin\clang-format-${{ matrix.clang-version }}_windows-amd64.exe
    #    mv ${{ matrix.release }}\build\MinSizeRel\bin\clang-query.exe ${{ matrix.release }}\build\MinSizeRel\bin\clang-query-${{ matrix.clang-version }}_windows-amd64.exe
    #    mv ${{ matrix.release }}\build\MinSizeRel\bin\clang-tidy.exe ${{ matrix.release }}\build\MinSizeRel\bin\clang-tidy-${{ matrix.clang-version }}_windows-amd64.exe
    #- name: create and print sha512sum
    #  run: |
    #    $env:Path = "C:\Program Files\Git\usr\bin;$env:Path"
    #    cd ${{ matrix.release }}\build\MinSizeRel\bin
    #    sha512sum.exe clang-format-${{ matrix.clang-version }}_windows-amd64.exe > clang-format-${{ matrix.clang-version }}_windows-amd64.exe.sha512sum
    #    sha512sum.exe clang-query-${{ matrix.clang-version }}_windows-amd64.exe > clang-query-${{ matrix.clang-version }}_windows-amd64.exe.sha512sum
    #    sha512sum.exe clang-tidy-${{ matrix.clang-version }}_windows-amd64.exe > clang-tidy-${{ matrix.clang-version }}_windows-amd64.exe.sha512sum
    #    echo "Checksums are: "
    #    Get-Content -Path clang-format-${{ matrix.clang-version }}_windows-amd64.exe.sha512sum
    #    Get-Content -Path clang-query-${{ matrix.clang-version }}_windows-amd64.exe.sha512sum
    #    Get-Content -Path clang-tidy-${{ matrix.clang-version }}_windows-amd64.exe.sha512sum
    #- name: upload release
    #  uses: xresloader/upload-to-github-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    file: "${{ matrix.release }}/build/MinSizeRel/bin/clang-*-${{ matrix.clang-version }}_windows-amd64.exe*"
    #    draft: true
